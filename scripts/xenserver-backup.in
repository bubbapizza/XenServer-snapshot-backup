#!/bin/bash
# snapback.sh 1.4
# Simple script to create regular snapshot-based backups for Citrix Xenserver
# Mark Round, scripts@markround.com
# http://www.markround.com/snapback
#
# 1.4 : Modifications by Luis Davim to support XVA backups with independent scheduling
# 1.3 : Added basic lockfile
# 1.2 : Tidied output, removed VDIs before deleting snapshots and templates
# 1.1 : Added missing force=true paramaters to snapshot uninstall calls.

prefix=@prefix@


# Initialize functions and package variables.
. @datadir@/@PACKAGE@/init-functions

# If a lockfile exists, we're already running a backup!
if [ -f $LOCKFILE ]; then
        echo "Lockfile $LOCKFILE exists, exiting!"
        exit 1
fi

touch $LOCKFILE


# Date format must be %Y%m%d so we can sort them
BACKUP_DATE=$(date +"%Y%m%d")

# Temporary file
TEMP=/tmp/snapback.$$


echo " "
echo "=== Snapshot backup started at $(date) ==="
echo " "

# Loop through all the VMs listed.
sed '/^#/d' $VM_NAME_FILE | while read VM_NAME; do

    echo " "
    echo "== Backup for $VM_NAME started at $(date) =="

    #
    # Clean up old temporary snapshots.  In theory, there shouldn't be
    # any but maybe a previous backup crapped out.
    #
    echo "= Checking snapshots for $VM_NAME ="
    VM_SNAPSHOT_CHECK=$(${XE} snapshot-list name-label="${VM_NAME}-${SNAPSHOT_SUFFIX}" | xe_param uuid)
    if [ "$VM_SNAPSHOT_CHECK" != "" ]; then
        echo "Found old backup snapshot : $VM_SNAPSHOT_CHECK"
        echo "Deleting..."
        delete_snapshot $VM_SNAPSHOT_CHECK
    fi
    echo "Done."

    #
    # Snapshot the VM
    #
    echo "= Creating temporary backup snapshot ="
    SNAPSHOT_UUID=$(${XE} vm-snapshot vm="$VM_NAME" new-name-label="$VM_NAME-$SNAPSHOT_SUFFIX")
    echo "Created snapshot with UUID : $SNAPSHOT_UUID"

    #
    # Backup to XVA.
    #
    echo "= Exporting snapshot to XVA file ="
    XVA_PREFIX=${VM_NAME}-${BACKUP_SUFFIX}
    XVA_FILE=${XVA_PATH}/${XVA_PREFIX}-${BACKUP_DATE}.xva
    ${XE} vm-export vm=${SNAPSHOT_UUID} filename=${XVA_FILE}
    echo "Done."
    

    #
    # Keep the most recent xva files.  The number of xva files to keep is 
    # stored in $XVA_RETAIN.
    #
    echo "= Removing old XVA files ="

    ls -1 ${XVA_PATH}/${XVA_PREFIX}-*.xva | sort -n | head -n ${XVA_RETAIN}> $TEMP
    while read OLD_TEMPLATE; do
        echo "Removing : $OLD_TEMPLATE"
        rm $OLD_TEMPLATE
    done < $TEMP

    echo "== Backup for $VM_NAME finished at $(date) =="
    echo " "
done 

${XE} vbd-list > ${XVA_PATH}/vbd-mapping.txt

echo "=== Snapshot backup finished at $(date) ==="
echo " "

#Backup Pool meta-data:
${XE} pool-dump-database file-name=${XVA_PATH}/pool_metadata

echo "=== Metadata backup started at $(date) ==="
echo " "


# NOTE: to restore metadata use:
# xe pool-restore-database file-name=@XVA_PATH@
# there is an option to test the backup with dry-run=true

echo "=== Metadata backup finished at $(date) ==="
echo " "

rm $TEMP
rm $LOCKFILE
